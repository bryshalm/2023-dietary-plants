# Load the required Python and pandas modules
# module load python pandas
import pickle

# Function to load SAMPLES list from pickle file
def load_samples():
    with open("sample_list.pkl", "rb") as f:
        return pickle.load(f)

SAMPLES = load_samples()
# Define the target rules
# Define the workflow to run the rules for all samples
rule all:
    input:
        expand("output/gather/{sample}.gather.csv", sample=SAMPLES)
# Rule for running Sourmash sketch
rule run_sourmash_sketch:
    input:
        "input/{sample}_1.fastq.gz",
        "input/{sample}_2.fastq.gz"
    output:
        "output/sketches/{sample}.sig.zip"
    shell:
        "sourmash sketch dna -p scaled=1000,k=21,k=31,k=51,abund {input[0]} {input[1]} --name '{wildcards.sample}' -o {output}"

# Rule for running Sourmash gather
rule run_sourmash_gather:
    input:
        "output/sketches/{sample}.sig.zip"
    output:
        #"output/prefetch/{sample}.prefetch.csv" #{db}.{ksize}.{sample}
        "output/gather/{sample}.gather.csv"
    shell:
        #"sourmash prefetch {input} db.trnL-entrez-ref.fasta.sig --dna --ksize 51 --threshold-bp 0 -o {output}" #save prefetch results
        "sourmash gather {input} ../../Sketched-db/db.plant-entrez-ref.sig.zip --threshold-bp 0 -k 51 -o {output}" 

# Rule for performing inner join with common_names.csv
rule perform_inner_join:
    input:
       "output/gather/{sample}.gather.csv" ,
   output:
        "output/cmon_name_anot/{sample}.annot.gather.csv" #{db.{ksize}.{sample}.common.csv
   script:
       "join_common_name_dbs.py"


